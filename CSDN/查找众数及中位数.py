'''
题目描述
众数是指一组数据中出现次数量多的那个数，众数可以是多个。

中位数是指把一组数据从小到大排列，最中间的那个数，如果这组数据的个数是奇数，那最中间那个就是中位数，如果这组数据的个数为偶数，那就把中间的两个数之和除以 2，所得的结果就是中位数。

查找整型数组中元素的众数并组成一个新的数组，求新数组的中位数。

输入描述：
输入一个一维整型数组，数组大小取值范围 0<N<1000，数组中每个元素取值范围 0<E<1000

输出描述：
输出众数组成的新数组的中位数

示例 1
输入：10 11 21 19 21 17 21 16 21 18 15
输出：21

示例 2
输入：9 10 11 12 13 1
输出：10.5

参考代码
使用哈希表 记录数字 和 数字出现的次数，并将众数输出到新的对象中；
对众数排序然后计算中位数。

以 10 11 21 19 21 17 21 16 21 18 15 为例：
dct = {10: 1, 11: 1, 21: 4, 19: 1, 17: 1, 16: 1, 18: 1, 15: 1}
ret = [21]


'''
while 1:
    try:
        nums = list(map(int, input().split()))

        dct = {}
        for c in nums:
            if c in dct:
                dct[c] += 1
            else:
                dct[c] = 1

        max_ = max(dct.values())
        ret = []
        for c, v in dct.items():
            if v == max_:
                ret.append(c)

        ret = sorted(ret)

        if len(ret) % 2:
            print(ret[len(ret)//2])
        else:
            idx = len(ret) // 2
            print(sum(ret[idx-1: idx+1]) / 2)

    except Exception as e:
        break