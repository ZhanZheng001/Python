'''
题目描述
你有n台机器编号为1~n，每台都需要完成完成一项工作，机器经过配置后都能完成独立完成一项工作。
假设第i台机器你需要花B分钟进行设置，然后开始运行，J分钟后完成任务。现在，你需要选择布置工作的顺序，使得用最短的时间完成所有工作。
注意，不能同时对两台进行配置，但配置完成的机器们可以同时执行他们各自的工作。

输入描述:
第一行输入代表总共有M组任务数据(1 <M<= 10) 。
每组数据第一行为一个整数指定机器的数量N(0<N <= 1000)。
随后的N行每行两个整数，第一个表示B(0<= B <= 10000)，第二个表示J(0 <= J <=10000)。
每组数据连续输入，不会用空行分隔。各组任务单独计时。

输出描述:
对于每组任务，输出最短完成时间，且每组的结果独占一行。例如，两组任务就应该有两行输出。

示例1
输入：
1
1
2 2
输出：
4

参考代码
优先设置耗时最长的设备，总的耗时应该是最短的
我们使用一组数据，模拟下：
1
3
4 3
5 10
1 10

下面是集中执行顺序，当先执行更耗时的任务是，并发能力更好，总耗时最短，所以根据耗时排序，计算任务执行时间就可以
'''
while 1:
    try:
        m = int("1")
        for i in range(m):
            n = int("3")
            # nums = [list(map(int, input().split())) for j in range(n)]
            # nums = sorted(nums, key=lambda x: x[1], reverse=True)
            nums = [[5, 10], [1, 10], [4, 3]]
            tal = 0
            tmp = 0
            while nums:
                b, j = nums.pop(0)
                if tmp >= b:
                    tmp -= b
                else:
                    t = b - tmp
                    tal += t
                if tmp < j:
                    t = j-tmp
                    tmp += t
                    tal += t
                print(tal,tmp)
            print(tal)
        break
    except Exception as e:
        break
