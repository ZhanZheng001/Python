'''
题目描述
小明从糖果盒中随意抓一把糖果，每次小明会取出一半的糖果分给同学们。

当糖果不能平均分配时，小明可以选择从糖果盒中（假设盒中糖果足够）取出一个糖果或放回一个糖果。

小明最少需要多少次（取出、放回和平均分配均记一次），能将手中糖果分至只剩一颗。

输入描述：
抓取的糖果数（<10000000000）：15

输出描述：
最少分至一颗糖果的次数：5

示例 1
输入：15
输出：5

解释：
(1) 15+1=16;
(2) 16/2=8;
(3) 8/2=4;
(4) 4/2=2;
(5) 2/2=1;

参考代码
递归求解
结束条件
f(2) = 1


'''
def dfs(n):
    if n == 1:
        return 0
    if n == 2:
        return 1
    if n % 2:
        # 取出、放回 + 平均分配 共两次
        return min((dfs((n-1)/2) + 2, dfs((n+1)/2) + 2))
    else:
        # 平均分配均记一次
        return dfs(n/2) + 1

while 1:
    try:
        m = int(input())
        print(dfs(m))
    except Exception as e:
        break