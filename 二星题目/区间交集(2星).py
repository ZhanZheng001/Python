'''
3.区间交集(200分):
给定一组闭区间,其中部分区间存在交集.任意两个给定区间的交集,称为公共区间
(如:[1,2],[2,3]的公共区间为[2,2];[3,5],[3,6]的公共区间为[3,5]).
公共区间之间若存在交集,则需要合并
(如:[1,3][3,5]区间存在交集[3,3],须合并为[1,5]).
按升序排列输出合并的区间列表.

输入描述:
一组区间列表，
区间数为 N: 0<=N<=1000;
区间元素为 X: -10000<=X<=10000。
输出描述:
升序排列的合并区间列表(每行输出一个区间)
备注:
1、区间元素均为数字，不考虑字母、符号等异常输入。
2、单个区间认定为无公共区间。

示例1  输入输出示例仅供调试，后台判题数据一般不包含示例
输入
0 3
1 3
3 5
3 6

输出
1 5
说明:
[0,3]和[1,3]的公共区间为[1,3]，[0,3]和[3,5]的公共区间为[3,3]，[0,3]和[3,6]的公共区间为[3,3]，
[1,3]和[3,5]的公共区间为[3,3]，[1,3]和[3,6]的公共区间为[3,3]，[3,5]和[3,6]的公共区间为[3,5]，
公共区间列表为[[1,3],[3,3],[3,5]]；
[1,3],[3,3],[3,5]存在交集，须合并为[1,5],只打印一行1 5即可.
'''
while True:
    try:
        list1 = [[0, 3], [1, 3], [3, 5], [3, 6]]
        # list1=[]
        # while True:
        #     try:
        #         tmp = list(map(int,input().strip().split(" ")))
        #         if len(tmp)==2:
        #             list1.append(tmp)
        #     except:
        #         break
        list1.sort()
        list2 = []
        for i in range(len(list1) - 1):
            for j in range(i + 1, len(list1)):
                if list1[i][-1] >= list1[j][0]:  # 前面元素的结尾大于后面元素的开头,则存在交集.交集即后面元素开头到两个元素结尾小者
                    list2.append([list1[j][0], min(list1[i][-1], list1[j][-1])])
        list2.sort()  # [[1, 3], [3, 3], [3, 3], [3, 3], [3, 3], [3, 5]]
        l = len(list2)
        if l == 0:
            print("")
            break
        elif l == 1:#如果只有一个元素,那么直接打印即可,不需要合并公共区间
            tmp = list(map(str, list2[0]))
            print(" ".join(tmp))
            break
        else:
            i = 0
            while i <= l - 2:
                if list2[i][-1] >= list2[i + 1][0]:  # 前面元素的结尾大于后面元素开头,则存在交集.则前面元素的结尾需要延伸到后面元素结尾大者
                    list2[i][-1] = max(list2[i][-1], list2[i + 1][-1])
                    list2.pop(i + 1)  # 合并完需要去掉后面的元素
                    l -= 1
                else:
                    i += 1
            for i in list2:
                tmp = list(map(str, i))
                print(" ".join(tmp))
            break
    except:
        break

